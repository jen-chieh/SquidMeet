@using ContosoCrafts.WebSite.Models
@using ContosoCrafts.WebSite.Services
@using Microsoft.AspNetCore.Components.Web
@inject JsonFileLocationService ProductService
@inject JsonFileLocationHoursService LocationHoursService
@inject JsonFileLocationTypeService LocationTypeService

<div style="margin-top: 125px">
    <button @onclick="(e => sortingbyLocation())">
        <img src="https://raw.githubusercontent.com/youjin6/picbed2/main/code/img/store/ok20220506045042.png" alt="detail" style="width:30px;height:28px;"> Location Sorting
    </button>
    <button @onclick="(e => sortingbyRate())">
        <img src="https://raw.githubusercontent.com/youjin6/picbed2/main/code/img/store/ok20220506045029.png" alt="detail" style="width:30px;height:28px;"> Rate Sorting
    </button>
</div>


<div class="card-columns" style="margin-top: 30px">
    @{
        var dataset = ProductService.GetAllData();
        if (locationsorting == true) { dataset = ProductService.sortByLocation(); }
        if (ratesorting == true) { dataset = ProductService.sortByRate(); }
        LocationHoursModel ProductHours;
        LocationTypeModel ProductType;
        foreach (var product in dataset)
        {
            ProductHours = LocationHoursService.GetLocationHours().First(x => x.location_hours_id == product.location_id);
            ProductType = LocationTypeService.GetLocationTypes().First(x => x.type_id == product.type_id);
            <div class="card">
                <a href="/Product/Read/@product.location_id">
                    <div class="card-img" style="background-image: url('@product.img');">
                    </div>
                </a>
                <div class="card-body">
                    <h5 class="card-title">@product.name</h5>
                </div>
                <div class="card-footer">
                    <small class="text-muted">
                        <div class="container">
                            <button style="margin-left:150px" @onclick="(e => SelectProduct(product.location_id))"
                            data-toggle="modal" data-target="#productModal" class="btn btn-primary">
                                More Info
                            </button>
                            <div class="myDIV" style="margin-top:-30px; margin-left:100px"><img src="https://raw.githubusercontent.com/youjin6/picbed2/main/code/img/store/ok20220506044220.png" alt="detail" style="width:30px;height:28px;"></div>
                            <div class="hide">
                                <p class="badge badge-pill badge-warning"> Address: @product.address</p><br/>
                                 <p class="badge badge-pill badge-info"> Type: @ProductType.type_name</p><br/>
                                <p class="badge badge-pill badge-success"> Hours:</p><br/>
                                <p class="badge badge-light"> Monday: @ProductHours.location_mon_hours</p>
                                <p class="badge badge-light"> Tuesday: @ProductHours.location_tues_hours</p>
                                <p class="badge badge-light"> Wednesday: @ProductHours.location_wed_hours</p>
                                <p class="badge badge-light"> Thursday: @ProductHours.location_thurs_hours</p>
                                <p class="badge badge-light"> Friday: @ProductHours.location_fri_hours</p>
                                <p class="badge badge-light"> Saturday: @ProductHours.location_sat_hours</p>
                                <p class="badge badge-light"> Sunday: @ProductHours.location_sun_hours</p>
                            </div>

                        </div>



                    </small>
                </div>

            </div>
        }
    }
</div>

@if (selectedProduct != null)
{
    <div class="modal fade" id="productModal" tabindex="-1" role="dialog" aria-labelledby="productTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="productTitle">@selectedProduct.name</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="card">
                        <div class="card-img" style="background-image: url('@selectedProduct.img');">
                        </div>
                        <div class="card-body">
                            <p class="badge badge-pill badge-warning"> Address: @selectedProduct.address</p><br/>
                            <p class="badge badge-pill badge-info"> Type: @selectedProductType.type_name</p><br/>
                            <p class="badge badge-pill badge-success"> Hours:</p><br/>
                            <p class="badge badge-light"> Monday: @selectedProductHours.location_mon_hours</p>
                            <p class="badge badge-light"> Tuesday: @selectedProductHours.location_tues_hours</p>
                            <p class="badge badge-light"> Wednesday: @selectedProductHours.location_wed_hours</p>
                            <p class="badge badge-light"> Thursday: @selectedProductHours.location_thurs_hours</p>
                            <p class="badge badge-light"> Friday: @selectedProductHours.location_fri_hours</p>
                            <p class="badge badge-light"> Saturday: @selectedProductHours.location_sat_hours</p>
                            <p class="badge badge-light"> Sunday: @selectedProductHours.location_sun_hours</p>

                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    @if (voteCount == 0)
                    {
                        <span>Be the first to vote!</span>
                    }
                    else
                    {
                        <span>@voteCount @voteLabel</span>
                    }
                    @for (int i = 1; i < 6; i++)
                    {
                        var currentStar = i;
                        if (i <= currentRating)
                        {
                            <span class="fa fa-star checked" @onclick="(e => SubmitRating(currentStar))"></span>
                        }
                        else
                        {
                            <span class="fa fa-star" @onclick="(e => SubmitRating(currentStar))"></span>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">


@code
{
    LocationModel selectedProduct;
    string selectedProductId;
    string selectedProductTypeId;
    LocationHoursModel selectedProductHours;
    LocationTypeModel selectedProductType;
    Boolean locationsorting = false;
    Boolean ratesorting = false;
    void SelectProduct(string productId)
    {
        selectedProductId = productId;
        selectedProduct = ProductService.GetAllData().First(x => x.location_id == productId);
        GetCurrentRating();
        selectedProductTypeId = selectedProduct.type_id;
        selectedProductHours = LocationHoursService.GetLocationHours().First(x => x.location_hours_id == productId);
        selectedProductType = LocationTypeService.GetLocationTypes().First(x => x.type_id == selectedProductTypeId);
    }

    int currentRating = 0;
    int voteCount = 0;
    string voteLabel;

    void GetCurrentRating()
    {
        if (selectedProduct.rating == null)
        {
            currentRating = 0;
            voteCount = 0;
        }
        else
        {
            voteCount = selectedProduct.rating.Count();
            voteLabel = voteCount > 1 ? "Votes" : "Vote";
            currentRating = selectedProduct.rating.Sum() / voteCount;
        }

        System.Console.WriteLine($"Current rating for {selectedProduct.location_id}: {currentRating}");
    }

    void SubmitRating(int rating)
    {
        System.Console.WriteLine($"Rating received for {selectedProduct.location_id}: {rating}");
        ProductService.AddRating(selectedProductId, rating);
        SelectProduct(selectedProductId);
    }

    void sortingbyLocation()
    {
        locationsorting = true;
        ratesorting = false;

    }

    void sortingbyRate()
    {
        locationsorting = false;
        ratesorting = true;

    }
}
