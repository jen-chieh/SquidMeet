@using ContosoCrafts.WebSite.Models
@using ContosoCrafts.WebSite.Services
@using Microsoft.AspNetCore.Components.Web
@using ContosoCrafts.WebSite.Pages
@using SquidMeet.WebSite.Components
@inject JsonFileMeetupService MeetupService
@inject NavigationManager NavigationManager


@*<a href="Update">Update &nbsp;</a>*@



<section class="page-title bg-primary position-relative">
  <div class="container" style="margin-top: 100px">
    <div class="row">
      <div class="col-12 text-center page-title1">
        <h2 class="text-white font-tertiary">My Group</h2>
      </div>
    </div>
  </div>
  <img src="../wwwroot/images/illustrations/page-title.png" alt="illustrations" class="bg-shape-1 w-100">
  <img src="../wwwroot/images/illustrations/leaf-pink-round.png" alt="illustrations" class="bg-shape-2">
  <img src="../wwwroot/images/illustrations/dots-cyan.png" alt="illustrations" class="bg-shape-3">
  <img src="../wwwroot/images/illustrations/leaf-yellow.png" alt="illustrations" class="bg-shape-5">
  <img src="../wwwroot/images/illustrations/dots-group-cyan.png" alt="illustrations" class="bg-shape-6">
  <img src="../wwwroot/images/illustrations/leaf-cyan-lg.png" alt="illustrations" class="bg-shape-7">
  <!-- background shapes -->
</section>



<div class="card-columns">
    @{
        var dataset = MeetupService.GetMeetups().Where(m => m.Host == "YJ");


        //List<MeetupModel> meetups = new List<MeetupModel>();
        //meetups.Add(meetup);

        foreach (var meetup in dataset)
        {
            var attendees = meetup.Attendees;
            int count;
            @if (attendees != null)
            {
                count = attendees.Count();
            }
            else
            {
                count = 0;
            }
            
            <div class="card">
                <div class="card-img" style="background-image: url('@meetup.Img');">
                </div>
                <div class="card-body">
                    <h5 class="card-title">Title: @meetup.Title</h5>
                    <a class="card-text">Host: &nbsp;@meetup.Host</a>
                    @{
                        if (attendees != null)
                        {
                            <br />
                            <a>Attentee: </a>
                            foreach (var attendee in attendees)
                            {
                                <a class="card-text">&nbsp; @attendee</a>
                            }
                        }
                        else
                        {
                            <br />
                            <a class="card-text"> 0 Attendee</a>
                        }
                    }

                </div>

                <div class="card-footer">
                    <small class="text-muted">
                        Date: @meetup.Date
                    </small>
                    <a  href="/Group/Update/@meetup.meetup_id" onclick="">Update</a>
                </div>
            </div>

        }

    }
</div>


@code {
    MeetupModel selectedMeetup;
    string selectedMeetupId;

    void selectMeetup(string meetupId)
    {
        selectedMeetupId = meetupId;
        selectedMeetup = MeetupService.GetMeetups().FirstOrDefault(m => m.meetup_id == meetupId);
    }
}